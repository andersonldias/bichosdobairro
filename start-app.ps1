# Script para iniciar o Sistema de Gerenciamento de Petshop
# Autor: Assistente IA
# Data: 2024

Write-Host "========================================" -ForegroundColor Cyan
Write-Host "    GERENCIAMENTO DE PETSHOP" -ForegroundColor Yellow
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# Definir diret√≥rio do projeto
$projectPath = "C:\Users\Ander\Desktop\Projeto Loja\Projeto novo"

# Verificar se o diret√≥rio existe
if (-not (Test-Path $projectPath)) {
    Write-Host "‚ùå Erro: Diret√≥rio do projeto n√£o encontrado!" -ForegroundColor Red
    Write-Host "   Caminho: $projectPath" -ForegroundColor Red
    Read-Host "Pressione Enter para sair"
    exit 1
}

# Navegar para o diret√≥rio do projeto
Set-Location $projectPath

Write-Host "üöÄ Iniciando aplica√ß√£o..." -ForegroundColor Green
Write-Host ""

# Fun√ß√£o para verificar se uma porta est√° em uso
function Test-Port {
    param($port)
    $connection = Get-NetTCPConnection -LocalPort $port -ErrorAction SilentlyContinue
    return $connection -ne $null
}

# Fun√ß√£o para aguardar at√© uma porta estar dispon√≠vel
function Wait-ForPort {
    param($port, $timeout = 30)
    $startTime = Get-Date
    while ((Get-Date) -lt $startTime.AddSeconds($timeout)) {
        if (Test-Port $port) {
            return $true
        }
        Start-Sleep -Seconds 1
    }
    return $false
}

# Verificar se as portas j√° est√£o em uso
if (Test-Port 3001) {
    Write-Host "‚ö†Ô∏è  Porta 3001 (Backend) j√° est√° em uso" -ForegroundColor Yellow
}

if (Test-Port 5173) {
    Write-Host "‚ö†Ô∏è  Porta 5173 (Frontend) j√° est√° em uso" -ForegroundColor Yellow
}

Write-Host ""

# Iniciar Backend
Write-Host "[1/3] Iniciando Backend..." -ForegroundColor Blue
$backendJob = Start-Job -ScriptBlock {
    Set-Location "C:\Users\Ander\Desktop\Projeto Loja\Projeto novo\backend"
    npm start
}

# Aguardar backend inicializar
Write-Host "   Aguardando backend inicializar..." -ForegroundColor Gray
Start-Sleep -Seconds 5

# Iniciar Frontend
Write-Host "[2/3] Iniciando Frontend..." -ForegroundColor Blue
$frontendJob = Start-Job -ScriptBlock {
    Set-Location "C:\Users\Ander\Desktop\Projeto Loja\Projeto novo\frontend"
    npm run dev
}

# Aguardar frontend inicializar
Write-Host "[3/3] Aguardando servidores inicializarem..." -ForegroundColor Blue
Start-Sleep -Seconds 8

# Verificar se os servidores est√£o rodando
$backendRunning = Wait-ForPort 3001 10
$frontendRunning = Wait-ForPort 5173 10

if ($backendRunning) {
    Write-Host "‚úÖ Backend rodando em http://localhost:3001" -ForegroundColor Green
} else {
    Write-Host "‚ùå Backend n√£o est√° respondendo" -ForegroundColor Red
}

if ($frontendRunning) {
    Write-Host "‚úÖ Frontend rodando em http://localhost:5173" -ForegroundColor Green
} else {
    Write-Host "‚ùå Frontend n√£o est√° respondendo" -ForegroundColor Red
}

Write-Host ""

# Abrir navegador
if ($frontendRunning) {
    Write-Host "üåê Abrindo navegador..." -ForegroundColor Cyan
    Start-Process "http://localhost:5173"
} else {
    Write-Host "‚ö†Ô∏è  Frontend n√£o est√° rodando. Tentando abrir mesmo assim..." -ForegroundColor Yellow
    Start-Process "http://localhost:5173"
}

Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "    APLICA√á√ÉO INICIADA COM SUCESSO!" -ForegroundColor Green
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "üìä Backend:  http://localhost:3001" -ForegroundColor White
Write-Host "üé® Frontend: http://localhost:5173" -ForegroundColor White
Write-Host ""
Write-Host "üí° Dicas:" -ForegroundColor Yellow
Write-Host "   - Para parar os servidores, feche as janelas do terminal" -ForegroundColor Gray
Write-Host "   - Para ver logs, verifique as janelas do terminal abertas" -ForegroundColor Gray
Write-Host ""

# Manter o script rodando para mostrar status
Write-Host "Pressione Ctrl+C para sair..." -ForegroundColor Gray
try {
    while ($true) {
        Start-Sleep -Seconds 10
        
        # Verificar status dos jobs
        $backendStatus = Get-Job $backendJob.Id -ErrorAction SilentlyContinue
        $frontendStatus = Get-Job $frontendJob.Id -ErrorAction SilentlyContinue
        
        if ($backendStatus.State -eq "Failed") {
            Write-Host "‚ùå Backend parou de funcionar" -ForegroundColor Red
        }
        
        if ($frontendStatus.State -eq "Failed") {
            Write-Host "‚ùå Frontend parou de funcionar" -ForegroundColor Red
        }
    }
} catch {
    Write-Host ""
    Write-Host "üõë Encerrando aplica√ß√£o..." -ForegroundColor Yellow
    
    # Parar jobs
    Stop-Job $backendJob -ErrorAction SilentlyContinue
    Stop-Job $frontendJob -ErrorAction SilentlyContinue
    Remove-Job $backendJob -ErrorAction SilentlyContinue
    Remove-Job $frontendJob -ErrorAction SilentlyContinue
    
    Write-Host "‚úÖ Aplica√ß√£o encerrada" -ForegroundColor Green
} 